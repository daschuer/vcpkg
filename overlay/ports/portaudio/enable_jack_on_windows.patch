diff --git a/src/hostapi/jack/pa_jack.c b/src/hostapi/jack/pa_jack.c
index 124c0f8..d71f336 100644
--- a/src/hostapi/jack/pa_jack.c
+++ b/src/hostapi/jack/pa_jack.c
@@ -53,10 +53,10 @@
 #include <stdio.h>
 #include <assert.h>
 #include <sys/types.h>
-#include <unistd.h>
 #include <errno.h>  /* EBUSY */
 #include <signal.h> /* sig_atomic_t */
 #include <math.h>
+#include <pthread.h>
 #include <semaphore.h>
 
 #include <jack/types.h>
@@ -87,7 +87,7 @@ static const char* port_regex_suffix = ":.*";
         PaError paErr; \
         if( (paErr = (expr)) < paNoError ) \
         { \
-            if( (paErr) == paUnanticipatedHostError && pthread_self() == mainThread_ ) \
+            if( (paErr) == paUnanticipatedHostError && pthread_equal( pthread_self(), mainThread_ ) ) \
             { \
                 const char *err = jackErr_; \
                 if (! err ) err = "unknown error"; \
@@ -103,7 +103,7 @@ static const char* port_regex_suffix = ":.*";
     do { \
         if( (expr) == 0 ) \
         { \
-            if( (code) == paUnanticipatedHostError && pthread_self() == mainThread_ ) \
+            if( (code) == paUnanticipatedHostError && pthread_equal( pthread_self(), mainThread_ ) ) \
             { \
                 const char *err = jackErr_; \
                 if (!err) err = "unknown error"; \
@@ -698,7 +698,7 @@ static void UpdateSampleRate( PaJackStream *stream, double sampleRate )
 
 static void JackErrorCallback( const char *msg )
 {
-    if( pthread_self() == mainThread_ )
+    if( pthread_equal( pthread_self(), mainThread_ ) )
     {
         assert( msg );
         jackErr_ = realloc( jackErr_, strlen( msg ) + 1 );
diff --git a/src/os/win/pa_win_hostapis.c b/src/os/win/pa_win_hostapis.c
index f8a4651..d4f1c85 100644
--- a/src/os/win/pa_win_hostapis.c
+++ b/src/os/win/pa_win_hostapis.c
@@ -63,6 +63,7 @@ PaError PaWinDs_Initialize( PaUtilHostApiRepresentation **hostApi, PaHostApiInde
 PaError PaAsio_Initialize( PaUtilHostApiRepresentation **hostApi, PaHostApiIndex index );
 PaError PaWinWdm_Initialize( PaUtilHostApiRepresentation **hostApi, PaHostApiIndex index );
 PaError PaWasapi_Initialize( PaUtilHostApiRepresentation **hostApi, PaHostApiIndex index );
+PaError PaJack_Initialize( PaUtilHostApiRepresentation **hostApi, PaHostApiIndex index );
 
 #ifdef __cplusplus
 }
@@ -92,6 +93,10 @@ PaUtilHostApiInitializer *paHostApiInitializers[] =
         PaWinWdm_Initialize,
 #endif
 
+#if PA_USE_JACK
+        PaJack_Initialize,
+#endif
+
 #if PA_USE_SKELETON
         PaSkeleton_Initialize, /* just for testing. last in list so it isn't marked as default. */
 #endif
